// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Mailosaur.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Email
    {
        /// <summary>
        /// Initializes a new instance of the Email class.
        /// </summary>
        public Email()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Email class.
        /// </summary>
        public Email(System.DateTime received, System.Guid id, EmailData html = default(EmailData), EmailData text = default(EmailData), IDictionary<string, object> headers = default(IDictionary<string, object>), string subject = default(string), string priority = default(string), IList<EmailAddress> fromProperty = default(IList<EmailAddress>), IList<EmailAddress> to = default(IList<EmailAddress>), IList<Attachment> attachments = default(IList<Attachment>), string senderhost = default(string), string server = default(string))
        {
            Html = html;
            Text = text;
            Headers = headers;
            Subject = subject;
            Priority = priority;
            From = fromProperty;
            To = to;
            Attachments = attachments;
            Received = received;
            Senderhost = senderhost;
            Server = server;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "html")]
        public EmailData Html { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public EmailData Text { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "headers")]
        public IDictionary<string, object> Headers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "priority")]
        public string Priority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public IList<EmailAddress> From { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "to")]
        public IList<EmailAddress> To { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attachments")]
        public IList<Attachment> Attachments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "received")]
        public System.DateTime Received { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "senderhost")]
        public string Senderhost { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Attachments != null)
            {
                foreach (var element in Attachments)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
