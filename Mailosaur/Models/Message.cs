// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Mailosaur.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Message
    {
        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        public Message()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        /// <param name="id">Unique identifier for the message.</param>
        /// <param name="fromProperty">The sender of the message.</param>
        /// <param name="to">The message’s recipient.</param>
        /// <param name="cc">Carbon-copied recipients for email
        /// messages.</param>
        /// <param name="bcc">Blind carbon-copied recipients for email
        /// messages.</param>
        /// <param name="received">The datetime that this message was received
        /// by Mailosaur.</param>
        /// <param name="subject">The message’s subject.</param>
        /// <param name="html">Message content that was sent in HTML
        /// format.</param>
        /// <param name="text">Message content that was sent in plain text
        /// format.</param>
        /// <param name="attachments">An array of attachment metadata for any
        /// attached files.</param>
        /// <param name="server">Identifier for the server in which the message
        /// is located.</param>
        public Message(System.Guid? id = default(System.Guid?), IList<MessageAddress> fromProperty = default(IList<MessageAddress>), IList<MessageAddress> to = default(IList<MessageAddress>), IList<MessageAddress> cc = default(IList<MessageAddress>), IList<MessageAddress> bcc = default(IList<MessageAddress>), System.DateTime? received = default(System.DateTime?), string subject = default(string), MessageContent html = default(MessageContent), MessageContent text = default(MessageContent), IList<Attachment> attachments = default(IList<Attachment>), Metadata metadata = default(Metadata), string server = default(string))
        {
            Id = id;
            From = fromProperty;
            To = to;
            Cc = cc;
            Bcc = bcc;
            Received = received;
            Subject = subject;
            Html = html;
            Text = text;
            Attachments = attachments;
            Metadata = metadata;
            Server = server;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique identifier for the message.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// Gets or sets the sender of the message.
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public IList<MessageAddress> From { get; set; }

        /// <summary>
        /// Gets or sets the message’s recipient.
        /// </summary>
        [JsonProperty(PropertyName = "to")]
        public IList<MessageAddress> To { get; set; }

        /// <summary>
        /// Gets or sets carbon-copied recipients for email messages.
        /// </summary>
        [JsonProperty(PropertyName = "cc")]
        public IList<MessageAddress> Cc { get; set; }

        /// <summary>
        /// Gets or sets blind carbon-copied recipients for email messages.
        /// </summary>
        [JsonProperty(PropertyName = "bcc")]
        public IList<MessageAddress> Bcc { get; set; }

        /// <summary>
        /// Gets or sets the datetime that this message was received by
        /// Mailosaur.
        /// </summary>
        [JsonProperty(PropertyName = "received")]
        public System.DateTime? Received { get; set; }

        /// <summary>
        /// Gets or sets the message’s subject.
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// Gets or sets message content that was sent in HTML format.
        /// </summary>
        [JsonProperty(PropertyName = "html")]
        public MessageContent Html { get; set; }

        /// <summary>
        /// Gets or sets message content that was sent in plain text format.
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public MessageContent Text { get; set; }

        /// <summary>
        /// Gets or sets an array of attachment metadata for any attached
        /// files.
        /// </summary>
        [JsonProperty(PropertyName = "attachments")]
        public IList<Attachment> Attachments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public Metadata Metadata { get; set; }

        /// <summary>
        /// Gets or sets identifier for the server in which the message is
        /// located.
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

    }
}
