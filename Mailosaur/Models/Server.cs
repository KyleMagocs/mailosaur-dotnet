// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Mailosaur.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Server
    {
        /// <summary>
        /// Initializes a new instance of the Server class.
        /// </summary>
        public Server()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Server class.
        /// </summary>
        /// <param name="id">Unique identifier for the server.</param>
        /// <param name="password">The password used for SMTP
        /// authentication.</param>
        /// <param name="name">A name used to identify the server.</param>
        /// <param name="emails">The current count of emails held within the
        /// server.</param>
        public Server(string id = default(string), string password = default(string), string name = default(string), IList<System.Guid?> users = default(IList<System.Guid?>), long? emails = default(long?), IList<ForwardingRule> forwardingRules = default(IList<ForwardingRule>))
        {
            Id = id;
            Password = password;
            Name = name;
            Users = users;
            Emails = emails;
            ForwardingRules = forwardingRules;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique identifier for the server.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the password used for SMTP authentication.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets a name used to identify the server.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "users")]
        public IList<System.Guid?> Users { get; set; }

        /// <summary>
        /// Gets or sets the current count of emails held within the server.
        /// </summary>
        [JsonProperty(PropertyName = "emails")]
        public long? Emails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "forwardingRules")]
        public IList<ForwardingRule> ForwardingRules { get; set; }

    }
}
