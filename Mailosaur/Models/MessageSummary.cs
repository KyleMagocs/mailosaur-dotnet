// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Mailosaur.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MessageSummary
    {
        /// <summary>
        /// Initializes a new instance of the MessageSummary class.
        /// </summary>
        public MessageSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MessageSummary class.
        /// </summary>
        public MessageSummary(System.Guid id, string server = default(string), IList<MessageAddress> rcpt = default(IList<MessageAddress>), IList<MessageAddress> fromProperty = default(IList<MessageAddress>), IList<MessageAddress> to = default(IList<MessageAddress>), IList<MessageAddress> cc = default(IList<MessageAddress>), IList<MessageAddress> bcc = default(IList<MessageAddress>), System.DateTime? received = default(System.DateTime?), string subject = default(string), string summary = default(string), int? attachments = default(int?))
        {
            Id = id;
            Server = server;
            Rcpt = rcpt;
            From = fromProperty;
            To = to;
            Cc = cc;
            Bcc = bcc;
            Received = received;
            Subject = subject;
            Summary = summary;
            Attachments = attachments;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rcpt")]
        public IList<MessageAddress> Rcpt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public IList<MessageAddress> From { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "to")]
        public IList<MessageAddress> To { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cc")]
        public IList<MessageAddress> Cc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bcc")]
        public IList<MessageAddress> Bcc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "received")]
        public System.DateTime? Received { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subject")]
        public string Subject { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "summary")]
        public string Summary { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "attachments")]
        public int? Attachments { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
